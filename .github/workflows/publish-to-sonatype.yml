name: Publish to Sonatype

on:
  push:
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'

jobs:
  publish:
    runs-on: ubuntu-latest
    environment: SONATYPE

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # This ensures all tags are fetched

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v3
        with:
          gradle-home-cache-cleanup: true

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Validate Gradle wrapper
        uses: gradle/actions/wrapper-validation@v3

      - name: Build and test
        run: ./gradlew build
        env:
          GRADLE_OPTS: '-Dorg.gradle.daemon=false'

      - name: Deploy to Maven Central
        run: |
          echo "🚀 Deploying to Maven Central..."
          ./gradlew deployToMavenCentral
        env:
          # GPG Configuration
          JRELEASER_GPG_PASSPHRASE: ${{ secrets.JRELEASER_GPG_PASSPHRASE }}
          JRELEASER_GPG_SECRET_KEY: ${{ secrets.JRELEASER_GPG_SECRET_KEY }}
          JRELEASER_GPG_PUBLIC_KEY: ${{ secrets.JRELEASER_GPG_PUBLIC_KEY }}

          # Maven Central API Credentials
          JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME: ${{ secrets.JRELEASER_MAVENCENTRAL_SONATYPE_USERNAME }}
          JRELEASER_MAVENCENTRAL_SONATYPE_PASSWORD: ${{ secrets.JRELEASER_MAVENCENTRAL_SONATYPE_PASSWORD }}

          # GitHub Token for JReleaser (required even if not releasing to GitHub)
          JRELEASER_GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

          # Gradle configuration
          GRADLE_OPTS: '-Dorg.gradle.daemon=false -Dorg.gradle.configureondemand=false'

      - name: Upload JReleaser logs
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: jreleaser-logs
          path: |
            **/build/jreleaser/trace.log
            **/build/jreleaser/output.properties
          retention-days: 30

      - name: Deployment Summary
        if: success()
        run: |
          echo "## ✅ Deployment Successful! 🎉" >> $GITHUB_STEP_SUMMARY
          echo "- **Tag**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your library has been deployed to Maven Central:" >> $GITHUB_STEP_SUMMARY
          echo "- **Release**: \`${{ github.ref_name }}\`" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 Check deployment status:" >> $GITHUB_STEP_SUMMARY
          echo "- [Sonatype Publishing Portal](https://central.sonatype.com/publishing/deployments)" >> $GITHUB_STEP_SUMMARY
          echo "- [Maven Central Search](https://central.sonatype.com/search?q=reaktiv-compose)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "ℹ️ **Note**: It may take 10-30 minutes for the artifacts to be available for download." >> $GITHUB_STEP_SUMMARY

      - name: Failure Summary
        if: failure()
        run: |
          echo "## ❌ Deployment Failed" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🔍 Check the JReleaser logs in the uploaded artifacts for details." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### 🛠️ Common fixes:" >> $GITHUB_STEP_SUMMARY
          echo "- Verify all secrets are properly configured" >> $GITHUB_STEP_SUMMARY
          echo "- Check your Sonatype namespace is verified" >> $GITHUB_STEP_SUMMARY
          echo "- Ensure GPG keys are ASCII armored format" >> $GITHUB_STEP_SUMMARY